name: Android CI/CD on develop

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Make gradlew executable
      run: chmod +x ./gradlew
    - name: Build with Gradle
      run: ./gradlew assemble
    - name: Sign APK
      uses: r0adkll/sign-android-release@v1
      with:
        releaseDirectory: app/build/outputs/apk/release
        signingKeyBase64: ${{ secrets.SIGNINGKEYBASE64 }} # openssl base64 < kleini-keystore.jks | tr -d '\n' | tee kleini-keystore.jks.base64.txt
        alias: ${{ secrets.ALIAS }}
        keyStorePassword: ${{ secrets.KEYSTOREPASSWORD }}
        keyPassword: ${{ secrets.KEYPASSWORD }}
    - name: Setup git
      run: |
        git config --global user.name ${{ secrets.ACTIONS_USERNAME }}
        git config --global user.email ${{ secrets.ACTIONS_EMAIL }}
        git config --global pull.ff only
    - name: Rename, Add, Commit and Push APK
      run: |
        APP=$(echo ${GITHUB_REPOSITORY} | cut -d '/' -f2)
        OWNER=$(echo ${GITHUB_REPOSITORY} | cut -d '/' -f1)
        export TZ=Europe/Berlin
        current_time=$(date "+%Y%m%d-%H%M%S")

        CLONEDIR="app/release"

        mkdir -p $CLONEDIR
        rm -rf $CLONEDIR/*

        git clone "https://${{ secrets.API_TOKEN_GITHUB }}@github.com/$OWNER/APK-releases" "$CLONEDIR"

        mkdir -p $CLONEDIR/$APP/develop
        rm -rf $CLONEDIR/$APP/develop/*

        mv -f "app/build/outputs/apk/release/app-release-unsigned-signed.apk" "$CLONEDIR/$APP/develop/$APP.apk"
        
        ls -la "$CLONEDIR/$APP/develop"
        cd "$CLONEDIR"
        
        git add .
        git diff-index --quiet HEAD || git commit --allow-empty --message "Update from https://github.com/$GITHUB_REPOSITORY/commit/$GITHUB_SHA"
        git push origin master
